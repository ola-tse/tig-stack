# Telegraf Configuration
#
# Telegraf is entirely plugin driven. All metrics are gathered from the
# declared inputs, and sent to the declared outputs.
#
# Plugins must be declared in here to be active.
# To deactivate a plugin, comment out the name and any variables.
#
# Use 'telegraf -config telegraf.conf -test' to see what metrics a config
# file would generate.
#
# Environment variables can be used anywhere in this config file, simply surround
# them with ${}. For strings the variable must be within quotes (ie, "${STR_VAR}"),
# for numbers and booleans they should be plain (ie, ${INT_VAR}, ${BOOL_VAR})


# Global tags can be specified here in key="value" format.
[global_tags]
  # dc = "us-east-1" # will tag all metrics with dc=us-east-1
  # rack = "1a"
  ## Environment variables can be used as tags, and throughout the config file
  # user = "$USER"


# Configuration for telegraf agent
[agent]
  ## Default data collection interval for all inputs
  
  interval = "100ms"
  
  ## Rounds collection interval to 'interval'
  ## ie, if interval="10s" then always collect on :00, :10, :20, etc.
  
  #round_interval = true

  ## Telegraf will send metrics to outputs in batches of at most
  ## metric_batch_size metrics.
  ## This controls the size of writes that Telegraf sends to output plugins.
  
  metric_batch_size = 100

  ## Maximum number of unwritten metrics per output.  Increasing this value
  ## allows for longer periods of output downtime without dropping metrics at the
  ## cost of higher maximum memory usage.
  metric_buffer_limit = 1000


  collection_jitter = "0s"
  flush_interval = "5s"
  flush_jitter = "0s"
  precision = ""

  logfile_rotation_interval = "10d"
  logfile_rotation_max_size = "10MB"
  logfile_rotation_max_archives = 5

  ## Override default hostname, if empty use os.Hostname()
  hostname = ""
  ## If set to true, do no set the "host" tag in the telegraf agent.
  omit_hostname = false




# # Configuration for sending metrics to InfluxDB
[[outputs.influxdb_v2]]
  urls = ["http://${DOCKER_INFLUXDB_INIT_HOST}:8086"]
  token = "$DOCKER_INFLUXDB_INIT_ADMIN_TOKEN"
  organization = "$DOCKER_INFLUXDB_INIT_ORG"
  bucket = "$DOCKER_INFLUXDB_INIT_BUCKET"
  insecure_skip_verify = false

[[outputs.websocket]]
  url = "ws://tig-stack-grafana-1:3000/api/live/push/custom_stream_id"
  data_format = "influx"
  [outputs.websocket.headers]
    Authorization = "Bearer eyJrIjoiNE1mVmFtcmxsbXZTVFNFSlN4eHNHRzUyb21zSmNIM04iLCJuIjoidGVsZWdyYWZfaW5wdXQiLCJpZCI6MX0="


[[inputs.cpu]]
  percpu = false
  totalcpu = true
# # Read metrics from MQTT topic(s)
[[inputs.mqtt_consumer]]

    servers = ["tcp://tig-stack-mosquitto-1:1883"]

    topics = [
      "values/sinus1",
      "values/sinus2",
      "values/sinus3",
      "values/sinus4",
      "values/sinus5",
      "values/sinus6",
      "values/sinus7",
      "values/sinus8",
      "values/sinus9",
    ]

    qos = 0

    connection_timeout = "30s"


    data_format = "value" #confirmed working with both outputs
    data_type = "float"
    #data_format = "influx" value
    #data_type = "float"

